{
	"info": {
		"_postman_id": "717736ac-51a1-48cb-a98d-ed0eab1dd032",
		"name": "Maula.postman_collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17787623",
		"_collection_link": "https://belajartest.postman.co/workspace/Samber-Code---QA~ebde29b0-6ef3-43a7-bb42-1601ebecb29a/collection/17787623-717736ac-51a1-48cb-a98d-ed0eab1dd032?action=share&source=collection_link&creator=17787623"
	},
	"item": [
		{
			"name": "API Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Verify access token is not null\", function",
							"    () {",
							"    pm.expect(pm.response.json().accessToken).not.equal(null);",
							"})",
							"",
							"pm.collectionVariables.set(\"token\", pm.response.json().accessToken);",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var name = pm.variables.replaceIn(\"{{$randomFirstName}}\");",
							"var email = pm.variables.replaceIn(name + \"@example.com\");",
							"",
							"pm.collectionVariables.set(\"name\", name);",
							"pm.collectionVariables.set(\"email\", email);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"clientName\": \"{{name}}\",\n   \"clientEmail\": \"{{email}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api-clients/",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api-clients",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Status OK\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/status",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"all values in the response message are correct\", () => {",
							"    _.each(pm.response.json().results, (item) => { ",
							"        pm.expect(item[\"id\"]).is.not.oneOf([null, undefined]);",
							"        pm.expect(item[\"name\"]).is.not.oneOf([null, undefined]);",
							"        pm.expect(item[\"author\"]).is.not.oneOf([null, undefined]);",
							"        pm.expect(item[\"isbn\"]).is.not.oneOf([null, undefined]);",
							"        pm.expect(item[\"type\"]).is.not.oneOf([null, undefined]);",
							"        pm.expect(item[\"price\"]).is.not.oneOf([null, undefined]);",
							"        pm.expect(item[\"current-stock\"]).is.not.oneOf([null, undefined]);",
							"        pm.expect(item[\"available\"]).is.not.oneOf([null, undefined]);",
							"    })",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/books/1",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"books",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Verify 'created' value is true\", function () {",
							"    pm.expect(jsonData.created).to.eql(true);",
							"});",
							"",
							"pm.test(\"Verify 'orderId' is not null\", function () {",
							"    pm.expect(jsonData.orderId).to.not.be.null;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"bookId\": 1,\n  \"customerName\": \"Nini\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/orders",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 1000msms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"var expectedId = pm.environment.get(\"id\");",
							"var expectedBookId = pm.environment.get(\"bookId\");",
							"var expectedCustomerName = pm.environment.get(\"customerName\");",
							"",
							"// Verify the ID value in the response matches from from submit id response",
							"pm.test(\"Verify 'id' value matches id\", function () {",
							"    pm.expect(jsonData.id).to.eql(expectedId);",
							"});",
							"",
							"// Verify the 'bookId' value in the response matches",
							"pm.test(\"Verify 'bookId' value matches expected bookId\", function () {",
							"    pm.expect(jsonData.bookId).to.eql(expectedBookId);",
							"});",
							"",
							"// Verify the 'customerName' value in the response matches the expected customer name",
							"pm.test(\"Verify 'customerName' value matches expected customer name\", function () {",
							"    pm.expect(jsonData.customerName).to.eql(expectedCustomerName);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/orders/{{orderID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"orders",
						"{{orderID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/orders/{{orderID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"orders",
						"{{orderID}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "email",
			"value": "",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "orderID",
			"value": "",
			"type": "string"
		},
		{
			"key": "variable_key",
			"value": ""
		},
		{
			"key": "customerName",
			"value": ""
		},
		{
			"key": "bookId",
			"value": "",
			"type": "string"
		}
	]
}